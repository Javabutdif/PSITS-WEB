import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Link } from "react-router-dom";
import { Button } from "@/components/ui/button";
import { NavigationMenu, NavigationMenuContent, NavigationMenuItem, NavigationMenuLink, NavigationMenuList, NavigationMenuTrigger, } from "@/components/ui/navigation-menu";
import { Dialog, DialogContent, DialogTrigger } from "@/components/ui/dialog";
import { ShoppingCart, Trash } from "lucide-react";
import { ScrollArea } from "@/components/ui/scroll-area";
import { useShoppingCart } from "./Context";
import Profile from "./ProfileAvatar";
import HamburgerMenu from "./HamburgerMenu";
const Header = ({ data }) => {
    const { cartItems, getTotalPrice, removeFromCart, decreaseQuantity, increaseQuantity } = useShoppingCart();
    return (_jsx("header", { className: "sticky top-0 z-50", children: _jsx("nav", { className: "bg-[#074873] w-full py-6 text-start", children: _jsxs("div", { className: "flex items-center justify-between text-white mx-10 xl:mx-[150px]", children: [_jsx(Link, { to: "/", children: _jsxs("div", { className: "flex items-center gap-4 cursor-pointer", children: [_jsx("div", { className: "max-h-[60px] max-w-[60px]", children: _jsx("img", { src: "/logo/psits_logo.png", className: "max-w-[60px] max-h-[60px]" }) }), _jsxs("h1", { className: "hidden sm:block font-semibold text-sm md:text-lg", children: ["Philippine Society of Information ", _jsx("br", {}), " Technology Students"] })] }) }), _jsxs("div", { className: "hidden gap-4 items-center lg:flex", children: [_jsx(Button, { className: "text-md", variant: "ghost", asChild: true, children: _jsx(Link, { to: "/", children: "Home" }) }), _jsx(Button, { className: "text-md", variant: "ghost", asChild: true, children: _jsx(Link, { to: "/about", children: "About Us" }) }), _jsx(Button, { className: "text-md", variant: "ghost", asChild: true, children: _jsx(Link, { to: "/events", children: "Events" }) }), _jsx(NavigationMenu, { children: _jsx(NavigationMenuList, { children: _jsxs(NavigationMenuItem, { children: [_jsx(NavigationMenuTrigger, { className: "bg-transparent text-md", children: " Students " }), _jsxs(NavigationMenuContent, { className: "flex flex-col gap-4 p-4 m-0 border bg-transparent w-[500px]", children: [_jsx(NavigationMenuLink, { asChild: true, children: _jsx(Button, { variant: "ghost", className: "hover:bg-slate-200", children: _jsx(Link, { to: "/students", children: "All Students" }) }) }), _jsx(NavigationMenuLink, { asChild: true, children: _jsx(Button, { variant: "ghost", className: "hover:bg-slate-200", children: _jsx(Link, { to: "/students/officers", children: _jsx("p", { children: "PSITS Officers" }) }) }) }), _jsx(NavigationMenuLink, { asChild: true, children: _jsx(Button, { variant: "ghost", className: "hover:bg-slate-200", children: _jsx(Link, { to: "/students/developers", children: "Developers" }) }) })] })] }) }) }), _jsx(Button, { className: "text-md", variant: "ghost", asChild: true, children: _jsx(Link, { to: "/merchandise", children: "Merchandise" }) })] }), _jsxs("div", { className: "flex gap-4 items-center", children: [_jsxs(Dialog, { children: [_jsx(DialogTrigger, { asChild: true, children: _jsxs(Button, { variant: "link", className: "relative", children: [_jsx(ShoppingCart, { color: "#fff" }), _jsx("span", { className: Object.values(cartItems).length < 1
                                                        ? "absolute top-[-5px] end-[-5px] bg-red-600 text-white font-bold rounded-full p-1 text-[15px] px-3 hidden"
                                                        : "absolute top-[-5px] end-[-5px] bg-red-600 text-white font-bold rounded-full p-1 text-[15px] px-3", children: Object.values(cartItems).length })] }) }), _jsx(DialogContent, { className: "sm:max-w-[70%] bg-[#f9f9f9]", children: _jsxs("div", { className: "flex flex-col mx-[3%]", children: [_jsxs("div", { className: "grid grid-cols-6 text-center bg-[#254872] text-white rounded-md shadow-md p-5 mt-5 mb-5", children: [_jsx("span", { children: "Product" }), _jsx("span", { children: "Size" }), _jsx("span", { children: "Color" }), _jsx("span", { children: "Price" }), _jsx("span", { children: "Quantity" }), _jsx("span", { children: "Action" })] }), _jsx(ScrollArea, { className: "h-[30em] w-full rounded-md", children: Object.values(cartItems).map((item) => (_jsxs("div", { className: "grid grid-cols-6 bg-white rounded-md shadow-md p-5 items-center mb-5", children: [_jsxs("div", { className: "flex flex-cols gap-x-5 items-center", children: [_jsx("img", { src: item.photo_img_link, alt: "Product Image", className: "w-[100px] h-[100px] rounded-md" }), _jsx("span", { children: item.title })] }), _jsx("span", { className: "text-center", children: item.size }), _jsx("span", { className: "text-center", children: item.color }), _jsxs("span", { className: "text-center", children: ["\u20B1", item.price] }), _jsxs("div", { className: "grid grid-cols-3 items-center justify-items-center", children: [_jsx(Button, { className: "bg-[#268EA7] hover:bg-[#3da7c2]", onClick: () => decreaseQuantity(item.id), children: "-" }), _jsx("span", { className: "text-center", children: item.quantity }), _jsx(Button, { className: "bg-[#268EA7] hover:bg-[#3da7c2]", onClick: () => increaseQuantity(item.id), children: "+" })] }), _jsx("div", { className: "flex flex-row justify-center", children: _jsx(Button, { className: "bg-red-600", onClick: () => removeFromCart(item.id), children: _jsx(Trash, { size: 20 }) }) })] }, item.id))) }), _jsxs("div", { className: "flex flex-row justify-end items-center gap-x-10 p-5", children: [_jsxs("span", { className: "bg-white rounded-md py-2 px-5 shadow-md", children: ["Order Total:\u2003\u20B1", getTotalPrice()] }), _jsx(Button, { type: "submit", className: "bg-[#268EA7] hover:bg-[#3da7c2]", children: "Checkout" })] })] }) })] }), data && data?.isAdmin ? (_jsxs(_Fragment, { children: [_jsx(Button, { className: "text-md", variant: "ghost", asChild: true, children: _jsx(Link, { to: "/admin", children: "Admin" }) }), _jsx(Profile, { className: "ml-4" })] })) : data ? (_jsx(Profile, { className: "ml-4" })) : (_jsx(Button, { className: "text-md", variant: "ghost", asChild: true, children: _jsx(Link, { to: "/login", children: "Login" }) })), _jsx(HamburgerMenu, {})] })] }) }) }));
};
export default Header;
